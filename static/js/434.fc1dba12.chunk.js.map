{"version":3,"file":"static/js/434.fc1dba12.chunk.js","mappings":"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","sources":["webpack://sandbox/./src/pages/ChatPage/ChatPage.module.css?88db","pages/ChatPage/ChatPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"chatPage\":\"ChatPage_chatPage__rzIxW\",\"messageList\":\"ChatPage_messageList__LzOGi\",\"outbox\":\"ChatPage_outbox__IXjMQ\",\"inbox\":\"ChatPage_inbox__7RJg9\",\"ownerName\":\"ChatPage_ownerName__tP8+K\",\"msgOutboxContent\":\"ChatPage_msgOutboxContent__zcuyh\",\"timestampOutbox\":\"ChatPage_timestampOutbox__CTdxG\",\"msgInboxContent\":\"ChatPage_msgInboxContent__Ac2Mp\",\"timestampInbox\":\"ChatPage_timestampInbox__MI0ox\",\"sendMsgCont\":\"ChatPage_sendMsgCont__QuLt5\",\"sendMsgInput\":\"ChatPage_sendMsgInput__tKyFR\",\"writeMsgButton\":\"ChatPage_writeMsgButton__+Gpeg\",\"paperClipIcon\":\"ChatPage_paperClipIcon__ycmnk\",\"smileIcon\":\"ChatPage_smileIcon__M7kqM\",\"sendIcon\":\"ChatPage_sendIcon__1TUa+\",\"sendMsgButton\":\"ChatPage_sendMsgButton__WiKBY\"};","import React, { useState, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateChat } from \"../../redux/public/chatsSlice\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useChats } from \"../../hooks/useChats\";\r\nimport Input from \"../../components/commonComponents/Input/Input\";\r\n\r\nimport { FaPaperclip, FaRegSmile, FaPaperPlane } from \"react-icons/fa\";\r\nimport EmojiPicker from \"emoji-picker-react\";\r\n\r\nimport styles from \"./ChatPage.module.css\";\r\n\r\nexport default function ChatPage() {\r\n  const { chatId } = useParams();\r\n  const { chats } = useChats();\r\n  const dispatch = useDispatch();\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n  const fileInputRef = useRef();\r\n\r\n  const selectedChat = chats.find((chat) => chat.id === chatId);\r\n\r\n  if (!selectedChat) {\r\n    return <div className={styles.notFound}>Chat not found</div>;\r\n  }\r\n\r\n  const formatTimestamp = (timestamp) => {\r\n    let date = new Date(timestamp);\r\n    if (isNaN(date.getTime())) {\r\n      const fixedTimestamp = timestamp.replace(\r\n        /(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}):(\\d{2})\\.(\\d{3})Z$/,\r\n        \"$1:59.$3Z\"\r\n      );\r\n      date = new Date(fixedTimestamp);\r\n    }\r\n    if (isNaN(date.getTime())) return \"\";\r\n\r\n    if (date.getSeconds() > 59) date.setSeconds(59);\r\n\r\n    const formattedTime = date.toLocaleTimeString([], {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    });\r\n\r\n    const day = date.getDate();\r\n    const month = date.toLocaleString(\"default\", { month: \"long\" });\r\n    const year = date.getFullYear();\r\n\r\n    return `${day}${month}${year} ${formattedTime}`;\r\n  };\r\n\r\n  const handleSendMsg = () => {\r\n    if (!message.trim()) return;\r\n\r\n    dispatch(\r\n      updateChat({\r\n        chatId,\r\n        newMessages: [\r\n          {\r\n            id: crypto.randomUUID(),\r\n            content: message,\r\n            isInbox: false,\r\n            sentAt: new Date().toISOString(),\r\n          },\r\n        ],\r\n      })\r\n    );\r\n    setMessage(\"\");\r\n    setShowEmojiPicker(false);\r\n  };\r\n\r\n  const handleAttachClick = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      console.log(\"Selected file:\", file);\r\n      // Upload logic or preview logic goes here\r\n    }\r\n  };\r\n\r\n  const toggleEmojiPicker = () => {\r\n    setShowEmojiPicker((prev) => !prev);\r\n  };\r\n\r\n  const handleEmojiClick = (emojiData) => {\r\n    setMessage((prev) => prev + emojiData.emoji);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.chatPage}>\r\n      <ul className={styles.messageList}>\r\n        {selectedChat.messages.map((msg) =>\r\n          msg.isInbox ? (\r\n            <li key={msg.id} className={styles.outbox}>\r\n              <span className={styles.ownerName}>Radu Bogdan</span>\r\n              <span className={styles.msgOutboxContent}>{msg.content}</span>\r\n              <span className={styles.timestampOutbox}>\r\n                {msg.sentAt\r\n                  ? formatTimestamp(msg.sentAt)\r\n                  : \"Time not available\"}\r\n              </span>\r\n            </li>\r\n          ) : (\r\n            <li key={msg.id} className={styles.inbox}>\r\n              <span className={styles.msgInboxContent}>{msg.content}</span>\r\n              <span className={styles.timestampInbox}>\r\n                {msg.sentAt\r\n                  ? formatTimestamp(msg.sentAt)\r\n                  : \"Time not available\"}\r\n              </span>\r\n            </li>\r\n          )\r\n        )}\r\n      </ul>\r\n\r\n      <div className={styles.sendMsgCont}>\r\n        <Input\r\n          width={\"100%\"}\r\n          className={styles.sendMsgInput}\r\n          paddingLeft={\"20px\"}\r\n          placeholder={\"Type something here...\"}\r\n          value={message}\r\n          handleChange={(e) => setMessage(e.target.value)}\r\n        >\r\n          <button\r\n            type=\"button\"\r\n            className={styles.writeMsgButton}\r\n            onClick={handleAttachClick}\r\n          >\r\n            <FaPaperclip className={styles.paperClipIcon} size={18} />\r\n          </button>\r\n          <input\r\n            type=\"file\"\r\n            ref={fileInputRef}\r\n            onChange={handleFileChange}\r\n            style={{ display: \"none\" }}\r\n          />\r\n\r\n          <div className={styles.emojiWrapper}>\r\n            <button\r\n              type=\"button\"\r\n              className={styles.writeMsgButton}\r\n              onClick={() => {\r\n                toggleEmojiPicker();\r\n                console.log(\"click\");\r\n              }}\r\n            >\r\n              <FaRegSmile className={styles.smileIcon} size={18} />\r\n            </button>\r\n            {showEmojiPicker && (\r\n              <div className={styles.emojiPicker}>\r\n                <EmojiPicker onEmojiClick={handleEmojiClick} />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Input>\r\n\r\n        <button className={styles.sendMsgButton} onClick={handleSendMsg}>\r\n          <FaPaperPlane className={styles.sendIcon} size={24} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["ChatPage","chatId","useParams","chats","useChats","dispatch","useDispatch","message","setMessage","useState","showEmojiPicker","setShowEmojiPicker","fileInputRef","useRef","selectedChat","find","chat","id","_jsx","className","styles","notFound","children","formatTimestamp","timestamp","date","Date","isNaN","getTime","fixedTimestamp","replace","getSeconds","setSeconds","formattedTime","toLocaleTimeString","hour","minute","getDate","toLocaleString","month","getFullYear","_jsxs","chatPage","messageList","messages","map","msg","isInbox","outbox","ownerName","msgOutboxContent","content","timestampOutbox","sentAt","inbox","msgInboxContent","timestampInbox","sendMsgCont","Input","width","sendMsgInput","paddingLeft","placeholder","value","handleChange","e","target","type","writeMsgButton","onClick","handleAttachClick","current","click","FaPaperclip","paperClipIcon","size","ref","onChange","file","files","console","log","style","display","emojiWrapper","prev","FaRegSmile","smileIcon","emojiPicker","EmojiPicker","onEmojiClick","emojiData","emoji","sendMsgButton","handleSendMsg","trim","updateChat","newMessages","crypto","randomUUID","toISOString","FaPaperPlane","sendIcon"],"sourceRoot":""}