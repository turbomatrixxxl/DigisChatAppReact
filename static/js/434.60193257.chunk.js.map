{"version":3,"file":"static/js/434.60193257.chunk.js","mappings":"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","sources":["webpack://sandbox/./src/pages/ChatPage/ChatPage.module.css?88db","pages/ChatPage/ChatPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"chatPage\":\"ChatPage_chatPage__yEme2\",\"messageList\":\"ChatPage_messageList__pG9D1\",\"outbox\":\"ChatPage_outbox__qaoCU\",\"inbox\":\"ChatPage_inbox__oxI9J\",\"ownerName\":\"ChatPage_ownerName__iZifK\",\"msgOutboxContent\":\"ChatPage_msgOutboxContent__2hPta\",\"timestampOutbox\":\"ChatPage_timestampOutbox__eEih5\",\"msgInboxContent\":\"ChatPage_msgInboxContent__rGXUo\",\"timestampInbox\":\"ChatPage_timestampInbox__EChid\",\"sendMsgCont\":\"ChatPage_sendMsgCont__gCZXa\",\"sendMsgInput\":\"ChatPage_sendMsgInput__2pJuU\",\"writeMsgButton\":\"ChatPage_writeMsgButton__UWYJz\",\"paperClipIcon\":\"ChatPage_paperClipIcon__b6Umr\",\"smileIcon\":\"ChatPage_smileIcon__U6la2\",\"sendIcon\":\"ChatPage_sendIcon__MJcgz\",\"sendMsgButton\":\"ChatPage_sendMsgButton__kraaH\",\"emojiWrapper\":\"ChatPage_emojiWrapper__3QUTM\",\"emojiPicker\":\"ChatPage_emojiPicker__WVEAX\",\"emojiPickerWrapper\":\"ChatPage_emojiPickerWrapper__MRts-\",\"filePreview\":\"ChatPage_filePreview__C7CxY\",\"imagePreview\":\"ChatPage_imagePreview__WCelK\"};","import React, { useState, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { updateChat } from \"../../redux/public/chatsSlice\";\nimport { useParams } from \"react-router-dom\";\nimport { useChats } from \"../../hooks/useChats\";\nimport Input from \"../../components/commonComponents/Input/Input\";\n\nimport { FaPaperclip, FaRegSmile, FaPaperPlane } from \"react-icons/fa\";\nimport EmojiPicker from \"emoji-picker-react\";\n\nimport styles from \"./ChatPage.module.css\";\n\nexport default function ChatPage() {\n  const { chatId } = useParams();\n  const { chats } = useChats();\n  const dispatch = useDispatch();\n\n  const [message, setMessage] = useState(\"\");\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [file, setFile] = useState(null); // State for selected file\n  const fileInputRef = useRef();\n\n  const selectedChat = chats.find((chat) => chat.id === chatId);\n\n  if (!selectedChat) {\n    return <div className={styles.notFound}>Chat not found</div>;\n  }\n\n  const formatTimestamp = (timestamp) => {\n    let date = new Date(timestamp);\n    if (isNaN(date.getTime())) {\n      const fixedTimestamp = timestamp.replace(\n        /(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}):(\\d{2})\\.(\\d{3})Z$/,\n        \"$1:59.$3Z\"\n      );\n      date = new Date(fixedTimestamp);\n    }\n    if (isNaN(date.getTime())) return \"\";\n\n    if (date.getSeconds() > 59) date.setSeconds(59);\n\n    const formattedTime = date.toLocaleTimeString([], {\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    });\n\n    const day = date.getDate();\n    const month = date.toLocaleString(\"default\", { month: \"long\" });\n    const year = date.getFullYear();\n\n    return `${day} ${month} ${year}-${formattedTime}`;\n  };\n\n  const handleSendMsg = () => {\n    if (!message.trim()) return;\n\n    dispatch(\n      updateChat({\n        chatId,\n        newMessages: [\n          {\n            id: crypto.randomUUID(),\n            content: message,\n            isInbox: false,\n            sentAt: new Date().toISOString(),\n          },\n        ],\n      })\n    );\n    setMessage(\"\");\n    setShowEmojiPicker(false);\n    setFile(null);\n  };\n\n  const handleAttachClick = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      setFile(selectedFile);\n    }\n  };\n\n  const toggleEmojiPicker = () => {\n    setShowEmojiPicker((prev) => !prev);\n  };\n\n  const handleEmojiClick = (emojiData) => {\n    setMessage((prev) => prev + emojiData.emoji);\n  };\n\n  return (\n    <div className={styles.chatPage}>\n      <ul className={styles.messageList}>\n        {selectedChat.messages.map((msg) =>\n          msg.isInbox ? (\n            <li key={msg.id} className={styles.outbox}>\n              <span className={styles.ownerName}>Radu Bogdan</span>\n              <span className={styles.msgOutboxContent}>{msg.content}</span>\n              <span className={styles.timestampOutbox}>\n                {msg.sentAt\n                  ? formatTimestamp(msg.sentAt)\n                  : \"Time not available\"}\n              </span>\n            </li>\n          ) : (\n            <li key={msg.id} className={styles.inbox}>\n              <span className={styles.msgInboxContent}>{msg.content}</span>\n              <span className={styles.timestampInbox}>\n                {msg.sentAt\n                  ? formatTimestamp(msg.sentAt)\n                  : \"Time not available\"}\n              </span>\n            </li>\n          )\n        )}\n        {/* File preview section */}\n        {file && (\n          <li className={styles.filePreview}>\n            {file.type.startsWith(\"image/\") ? (\n              <img\n                src={URL.createObjectURL(file)}\n                alt=\"File Preview\"\n                className={styles.imagePreview}\n              />\n            ) : (\n              <span>{file.name}</span> // For non-image files\n            )}\n          </li>\n        )}\n      </ul>\n\n      <div className={styles.sendMsgCont}>\n        <Input\n          width={\"100%\"}\n          className={styles.sendMsgInput}\n          paddingLeft={\"20px\"}\n          placeholder={\"Type something here...\"}\n          value={message}\n          handleChange={(e) => setMessage(e.target.value)}\n        >\n          <button\n            type=\"button\"\n            className={styles.writeMsgButton}\n            onClick={handleAttachClick}\n          >\n            <FaPaperclip className={styles.paperClipIcon} size={18} />\n          </button>\n          <input\n            type=\"file\"\n            ref={fileInputRef}\n            onChange={handleFileChange}\n            style={{ display: \"none\" }}\n          />\n\n          <div className={styles.emojiWrapper}>\n            <button\n              type=\"button\"\n              className={styles.writeMsgButton}\n              onClick={toggleEmojiPicker}\n            >\n              <FaRegSmile className={styles.smileIcon} size={18} />\n            </button>\n            {showEmojiPicker && (\n              <div className={styles.emojiPicker}>\n                <EmojiPicker onEmojiClick={handleEmojiClick} />\n              </div>\n            )}\n          </div>\n        </Input>\n\n        <button className={styles.sendMsgButton} onClick={handleSendMsg}>\n          <FaPaperPlane className={styles.sendIcon} size={24} />\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"names":["ChatPage","chatId","useParams","chats","useChats","dispatch","useDispatch","message","setMessage","useState","showEmojiPicker","setShowEmojiPicker","file","setFile","fileInputRef","useRef","selectedChat","find","chat","id","_jsx","className","styles","notFound","children","formatTimestamp","timestamp","date","Date","isNaN","getTime","fixedTimestamp","replace","getSeconds","setSeconds","formattedTime","toLocaleTimeString","hour","minute","day","getDate","month","toLocaleString","year","getFullYear","concat","_jsxs","chatPage","messageList","messages","map","msg","isInbox","outbox","ownerName","msgOutboxContent","content","timestampOutbox","sentAt","inbox","msgInboxContent","timestampInbox","filePreview","type","startsWith","src","URL","createObjectURL","alt","imagePreview","name","sendMsgCont","Input","width","sendMsgInput","paddingLeft","placeholder","value","handleChange","e","target","writeMsgButton","onClick","handleAttachClick","current","click","FaPaperclip","paperClipIcon","size","ref","onChange","selectedFile","files","style","display","emojiWrapper","toggleEmojiPicker","prev","FaRegSmile","smileIcon","emojiPicker","EmojiPicker","onEmojiClick","emojiData","emoji","sendMsgButton","handleSendMsg","trim","updateChat","newMessages","crypto","randomUUID","toISOString","FaPaperPlane","sendIcon"],"sourceRoot":""}