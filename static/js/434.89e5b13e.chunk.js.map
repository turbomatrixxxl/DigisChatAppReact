{"version":3,"file":"static/js/434.89e5b13e.chunk.js","mappings":"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","sources":["webpack://sandbox/./src/pages/ChatPage/ChatPage.module.css?88db","pages/ChatPage/ChatPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"chatPage\":\"ChatPage_chatPage__yEme2\",\"messageList\":\"ChatPage_messageList__pG9D1\",\"outbox\":\"ChatPage_outbox__qaoCU\",\"inbox\":\"ChatPage_inbox__oxI9J\",\"ownerName\":\"ChatPage_ownerName__iZifK\",\"msgOutboxContent\":\"ChatPage_msgOutboxContent__2hPta\",\"timestampOutbox\":\"ChatPage_timestampOutbox__eEih5\",\"msgInboxContent\":\"ChatPage_msgInboxContent__rGXUo\",\"timestampInbox\":\"ChatPage_timestampInbox__EChid\",\"sendMsgCont\":\"ChatPage_sendMsgCont__gCZXa\",\"sendMsgInput\":\"ChatPage_sendMsgInput__2pJuU\",\"writeMsgButton\":\"ChatPage_writeMsgButton__UWYJz\",\"paperClipIcon\":\"ChatPage_paperClipIcon__b6Umr\",\"smileIcon\":\"ChatPage_smileIcon__U6la2\",\"sendIcon\":\"ChatPage_sendIcon__MJcgz\",\"sendMsgButton\":\"ChatPage_sendMsgButton__kraaH\"};","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useChats } from \"../../hooks/useChats\";\n\nimport Input from \"../../components/commonComponents/Input/Input\";\n\nimport { FaPaperclip } from \"react-icons/fa\"; // Paperclip icon\nimport { FaRegSmile } from \"react-icons/fa\"; // Regular style smile icon\nimport { FaPaperPlane } from \"react-icons/fa\"; // Send (paper plane) icon\n\nimport styles from \"./ChatPage.module.css\";\n\nexport default function ChatPage() {\n  const { chatId } = useParams();\n  const { chats } = useChats();\n\n  const [message, setMessage] = useState(\"\");\n\n  const selectedChat = chats.find((chat) => chat.id === chatId);\n\n  if (!selectedChat) {\n    return <div className={styles.notFound}>Chat not found</div>;\n  }\n\n  const formatTimestamp = (timestamp) => {\n    let date = new Date(timestamp);\n\n    // If the timestamp is invalid, we'll try to adjust it\n    if (isNaN(date.getTime())) {\n      // Try to trim or fix invalid timestamp parts (e.g., seconds out of range)\n      const fixedTimestamp = timestamp.replace(\n        /(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}):(\\d{2})\\.(\\d{3})Z$/,\n        \"$1:59.$3Z\"\n      );\n      date = new Date(fixedTimestamp);\n    }\n\n    // Ensure the timestamp is valid after the fix\n    if (isNaN(date.getTime())) {\n      return \"\"; // If invalid even after attempting fix, just return empty string\n    }\n\n    // Fix seconds if greater than 59\n    if (date.getSeconds() > 59) {\n      date.setSeconds(59);\n    }\n\n    // Format the time without seconds\n    const formattedTime = date.toLocaleTimeString([], {\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    });\n\n    // Format the date as 3March2025\n    const day = date.getDate();\n    const month = date.toLocaleString(\"default\", { month: \"long\" });\n    const year = date.getFullYear();\n\n    // Combine date and time\n    const formattedDate = `${day}${month}${year}`;\n\n    return `${formattedDate} ${formattedTime}`;\n  };\n\n  return (\n    <div className={styles.chatPage}>\n      <ul className={styles.messageList}>\n        {selectedChat.messages.map((msg) =>\n          msg.isInbox ? (\n            <li key={msg.id} className={styles.outbox}>\n              <span className={styles.ownerName}>Radu Bogdan</span>\n              <span className={styles.msgOutboxContent}>{msg.content}</span>\n              <span className={styles.timestampOutbox}>\n                {msg.sentAt\n                  ? formatTimestamp(msg.sentAt)\n                  : \"Time not available\"}\n              </span>\n            </li>\n          ) : (\n            <li key={msg.id} className={styles.inbox}>\n              <span className={styles.msgInboxContent}>{msg.content}</span>\n              <span className={styles.timestampInbox}>\n                {msg.sentAt\n                  ? formatTimestamp(msg.sentAt)\n                  : \"Time not available\"}\n              </span>\n            </li>\n          )\n        )}\n      </ul>\n      <div className={styles.sendMsgCont}>\n        <Input\n          width={\"100%\"}\n          className={styles.sendMsgInput}\n          paddingLeft={\"20px\"}\n          placeholder={\"Type something here...\"}\n          value={message}\n          handleChange={(e) => setMessage(e.target.value)}\n        >\n          <button className={styles.writeMsgButton}>\n            <FaPaperclip className={styles.paperClipIcon} size={18} />\n          </button>\n          <button className={styles.writeMsgButton}>\n            <FaRegSmile className={styles.smileIcon} size={18} />\n          </button>\n        </Input>\n        <button className={styles.sendMsgButton}>\n          <FaPaperPlane className={styles.sendIcon} size={24} />\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"names":["ChatPage","chatId","useParams","chats","useChats","message","setMessage","useState","selectedChat","find","chat","id","_jsx","className","styles","notFound","children","formatTimestamp","timestamp","date","Date","isNaN","getTime","fixedTimestamp","replace","getSeconds","setSeconds","formattedTime","toLocaleTimeString","hour","minute","getDate","toLocaleString","month","getFullYear","_jsxs","chatPage","messageList","messages","map","msg","isInbox","outbox","ownerName","msgOutboxContent","content","timestampOutbox","sentAt","inbox","msgInboxContent","timestampInbox","sendMsgCont","Input","width","sendMsgInput","paddingLeft","placeholder","value","handleChange","e","target","writeMsgButton","FaPaperclip","paperClipIcon","size","FaRegSmile","smileIcon","sendMsgButton","FaPaperPlane","sendIcon"],"sourceRoot":""}